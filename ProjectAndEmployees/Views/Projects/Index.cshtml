@model PaginatedList<ProjectAndEmployees.Models.Project>

@{
    ViewData["Title"] = "Projects";
}

<p>
    <a class="btn btn-primary" asp-action="Create">Create project</a>
</p>
<form asp-controller="Projects" asp-action="Index">
    <p>
        Title: <input type="text" name="SearchString" />
        <input class="btn btn-primary" type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
            </th>
            <th>
                Description
            </th>
            <th>
                First name / Last name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @foreach (var employee in item.Enrollments)
                    {
                        @employee.Employee.FirstName @:&nbsp; @employee.Employee.LastName
                        <br />
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProjectId }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Details", "Details", new { id = item.ProjectId }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProjectId }, new { @class = "btn btn-primary" })
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>